@model ClienteTableModel

@{
    ViewData["Title"] = "Listagem de Clientes";
}

<div style="gap: 30px; display: flex; flex-direction: column;">
    <div style="display: flex; flex-direction: row;">
        <h6 class="display-6" style="font-size: 1.6rem !important;">
            Consulte os seus Clientes cadastrados na
            sua Loja ou realize o cadastro de novos Cliente
        </h6>
        <span style="flex: auto;"></span>
        <div class="container-fluid" style="display: flex; width: auto;">
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a type="button" asp-area="" asp-controller="Cliente" asp-action="AdicionarCliente" class="btn btn-outline-secondary">Adicionar Cliente</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div id="filtro" style="display: none;">
        <div class="formStyle">
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="nomeCliente">Nome do Cliente/Razão Social</label>
                    <input type="text" id="nomeCliente" class="form-control " maxlength="150" placeholder="Nome completo ou Razão Social do Cliente" autocomplete="off">
                </div>
                <div class="divInput">
                    <label for="Email">E-Mail</label>
                    <input type="email" class="form-control  " id="email" maxlength="150" placeholder="E-mail do Cliente" autocomplete="off">
                </div>
            </div>
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="telefone">Telefone</label>
                    <input type="text" class="form-control " id="telefone" placeholder="Telefone do Cliente" autocomplete="off">
                </div>
                <div class="divInput">
                    <label for="DataCadastro">Data de Cadastro</label>
                    <input type="date" class="form-control" id="dataCadastro" placeholder="Data de Cadastro" autocomplete="off">
                </div>
            </div>
            <br />
            <div class="areaPrincipal">
                <div class="divInput" style="display: flex; align-items: center;">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="checkbox" class="form-control" placeholder="Bloqueio o acesso do Cliente na sua Loja">
                        <label class="form-check-label" for="ClienteBloqueado">
                            Bloqueio o acesso do Cliente na sua Loja
                        </label>
                    </div>
                </div>
            </div>
            <br />
            <div style="display: flex; flex-direction: row; gap: 10px;">
                <div class="divInput" style="display: flex; flex-direction: column;">
                    <button id="aplicarFiltro" class="btn btn-primary">Aplicar filtros</button>
                </div>
                <div class="divInput" style="display: flex; flex-direction: column;">
                    <button class="btn btn-danger" id="limparFiltro">Limpar filtros</button>
                </div>
            </div>
        </div>
    </div>
    <div style="gap: 0px; display: flex; flex-direction: column;">
        <div style="height: calc(100vh - 333px); background: rgba(0,0,0,.12); box-shadow: 2px 3px 10px;" class="table-responsive">
            <table class="table" style="background: #fff; text-align: center;">
                <thead>
                    <tr>
                        <th scope="col">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="flexCheckIndeterminate">
                                <label class="form-check-label" for="flexCheckIndeterminate">
                                </label>
                            </div>
                        </th>
                        <th scope="col">Nome/Razão Social</th>
                        <th scope="col">E-mail</th>
                        <th scope="col">Telefone</th>
                        <th scope="col">Data de cadastro</th>
                        <th scope="col">Bloqueado</th>
                        <th scope="col">Ações</th>
                        <th scope="col"><button class="btn btn-outline-secondary" id="filtrar">Filtrar</button></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.ClienteTableModelValue.Any())
                    {
                        foreach (ClienteTableModelValue cliente in Model.ClienteTableModelValue)
                        {
                            <tr>
                                <th>
                                    <div class="form-check">
                                        @using (Html.BeginForm("Index", "Cliente", FormMethod.Get))
                                        {
                                            @Html.LabelFor(model => model.ClienteTableModelValue.Find(x => x.Equals(cliente)).Selected, "", new {@class="form-check-label"})
                                            ;
                                            @Html.CheckBoxFor(model => model.ClienteTableModelValue.Find(x => x.Equals(cliente)).Selected, new {@class="form-check-input chkCliente"})
                                            ;
                                        }
                                    </div>
                                </th>
                                <td>@cliente.NomeCliente</td>
                                <td>@cliente.Email</td>
                                <td>@cliente.Telefone</td>
                                <td>@cliente.DataCadastro</td>
                                <td>@cliente.ClienteBloqueado</td>
                                <td colspan="2">
                                    <div class="btn-group" role="group" aria-label="Basic outlined example">
                                        <a type="button" class="btn btn-outline-secondary" asp-route-id="@cliente.Id" asp-controller="Cliente" asp-action="EditarCliente">Editar</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <nav aria-label="Page navigation" style="justify-content: center; display: flex; background: #fff; box-shadow: 2px 3px 10px;">
            <ul class="pagination" style="margin-top: 0.5rem; margin-bottom: 0.5rem;">
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("index", new { pagina = (Model.PaginaAtual > 1 ? Model.PaginaAtual - 1: Model.PaginaAtual), itensPorPagina = Model.ItensPorPagina })" aria-label="Next">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @if (Model != null && Model.ClienteTableModelValue.Any())
                {
                    @for (int i = 1; i <= Math.Ceiling((double)Model.TotalClientes / Model.ItensPorPagina); i++)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("index", new { pagina = i, itensPorPagina = Model.ItensPorPagina })" class="@(i == Model.PaginaAtual ? "active" : "")">
                                @i
                            </a>
                        </li>
                    }
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                }
                <!-- Adicione mais páginas conforme necessário -->
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("index", new { pagina = Model.PaginaAtual + (Model.TotalClientes > Model.ItensPorPagina * Model.PaginaAtual? 1: 0), itensPorPagina = Model.ItensPorPagina })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $("#flexCheckIndeterminate").change(function () {
                $(".chkCliente").prop('checked', $(this).prop("checked"));
            });

            $(".chkCliente").change(function () {
                if (!$(this).prop("checked")) {
                    $("#flexCheckIndeterminate").prop('checked', false);
                }
            });
            $("#filtrar").click(function () {
                $("#filtro").toggle();
            });
            $("#aplicarFiltro").click( function () {
                var clienteData = {
                    nomeCliente: $('#nomeCliente').val(),
                    checkbox: $('#checkbox').val(),
                    dataCadastro: $('#dataCadastro').val(),
                    telefone: $('#telefone').val(),
                    email: $('#email').val()
                };
                console.log(clienteData);
                $.ajax({
                    url: '@Url.Action("FiltrarClientes", "Cliente")',
                    type: 'POST',
                    data: { objetoFiltro: clienteData },
                    success: function (result) {
                        if (result.sucesso) {
                            console.log(result.mensagem)
                        }
                    },
                    error: function () {
                        toastr.error('Erro ao realizar a requisição', 'Erro');
                    }
                });
            });
        });
    </script>
}

<style>
    .areaPrincipal {
        display: flex;
        flex-direction: row;
        gap: 30px
    }

    .divInput {
        width: 100%
    }

    .formStyle {
        box-shadow: 2px 3px 10px;
        padding: 6px;
        border-radius: 10px;
    }
</style>
