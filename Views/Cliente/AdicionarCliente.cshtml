@model ClienteModel

@{
    ViewData["Title"] = "Cadastro de Clientes";
}

<div class="text-center">
    <h6 class="display-6" style="font-size: 1.6rem !important;">
        Cadastrar Cliente
    </h6>
</div>
<br />
<form asp-controller="Cliente" asp-action="AdicionarCliente" method="post" >
    <div style="display: flex; flex-direction: column; gap:30px;">
    <div class="formStyle">
        <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
            Área Principal
        </h6>
        <br />
        <div class="areaPrincipal">
            <div class="divInput">
                <label for="nomeCliente">Nome do Cliente/Razão Social</label>
                <input type="text" asp-for="NomeCliente" oninput="atualizarLengthHelp(NomeCliente.value, 'nomeClienteHelp')" class="form-control" maxlength="150" required placeholder="Nome completo ou Razão Social do Cliente" autocomplete="off">
                <small id="nomeClienteHelp" class="form-text text-muted" style="display: flex; justify-content: end;">0/150</small>
            </div>
            <div class="divInput">
                <label for="Email">E-Mail</label>
                <input type="email" formnovalidate asp-for="Email" oninput="atualizarLengthHelp(Email.value, 'emailHelp')" class="form-control" maxlength="150" required placeholder="E-mail do Cliente" autocomplete="off">
                <small id="emailHelp" class="form-text text-muted" style="display: flex; justify-content: end;">0/150</small>
            </div>
        </div>
        <div class="areaPrincipal">
            <div class="divInput">
                <label for="telefone">Telefone</label>
                <input type="text" asp-for="Telefone" oninput="Telefone.value = atualizarLengthHelpTelefone(Telefone.value, 'telefoneClienteHelp')" class="form-control" required placeholder="Telefone do Cliente" autocomplete="off">
                <small id="telefoneClienteHelp" class="form-text text-muted" style="display: flex; justify-content: end;">0/11</small>
            </div>
            <div class="divInput">
                <label for="dataCadastro">Data de Cadastro</label>
                <input type="date" formnovalidate asp-for="DataCadastro" class="form-control" disabled placeholder="Data de Cadastro" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="formStyle">
        <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
            Informações Pessoais
        </h6>
        <br />
        <div class="areaPrincipal" >
            <div class="divInput" style="display: flex; flex-direction: column !important;">
                @using (Html.BeginForm("AdicionarCliente", "Cliente", FormMethod.Post))
                {

                    @Html.LabelFor(model => model.TipoPessoa, "Tipo de Pessoa");
                    @Html.DropDownListFor(model => model.TipoPessoa, Model.TiposPessoa, "Selecione o tipo de Pessoa", new { @id = "tipoPessoaDropdown" });

                }
            </div>
            <div class="divInput">
                <label for="CpfCnpj">CPF/CNPJ</label>
                <input type="text" formnovalidate asp-for="CpfCnpj" oninput="CpfCnpj.value = atualizarLengthHelpCpfCnpj(CpfCnpj.value, 'CpfCnpjHelp')" class="form-control" maxlength="18" required placeholder="Insira o CPF ou o CNPJ do Cliente" autocomplete="off">
                <small id="CpfCnpjHelp" class="form-text text-muted" style="display: flex; justify-content: end;">0/11</small>
            </div>
        </div>
        <div class="areaPrincipal">
            <div class="divInput">
                <label for="InscricaoEstadual">Inscrição Estadual</label>
                <input type="text" asp-for="InscricaoEstadual" id="InscricaoEstadualId" oninput="InscricaoEstadual.value = atualizarLengthHelpInscricaoEstadual(InscricaoEstadual.value, 'InscricaoEstadualHelp')" class="form-control" placeholder="Inscrição Estadual do Cliente, selecionar Isento caso assim for" autocomplete="off">
                <small id="InscricaoEstadualHelp" class="form-text text-muted" style="display: flex; justify-content: end;">0/12</small>
            </div>
            <div class="divInput" style="display: flex; align-items: center;">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" asp-for="Isento" onchange="InscricaoEstadual.value = limparInscricaoEstadual(Isento[0].checked)" class="form-control" value="Isento[0].checked" placeholder="Isento">
                    <label class="form-check-label" for="Isento">
                        Isento
                    </label>
                </div>
            </div>
        </div>
        <div class="areaPrincipal" id="aparecer" style="display: none;">
            <div class="divInput">
                @using (Html.BeginForm("AdicionarCliente", "Cliente", FormMethod.Post))
                {

                    @Html.LabelFor(model => model.Genero, "Gênero");
                    @Html.DropDownListFor(model => model.Genero, Model.Generos, "Selecione o gênero do Cliente", new { @id = "Genero" });

                }
            </div>
            <div class="divInput">
                <label for="DataNascimento">Data de Nascimento</label>
                <input type="date" asp-for="DataNascimento" class="form-control" placeholder="Data de nascimento do Cliente" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="formStyle">
        <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
            Situação do Cliente
        </h6>
        <br />
        <div class="areaPrincipal">
            <div class="divInput" style="display: flex; align-items: center;">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" asp-for="SituacaoCliente" class="form-control" value="SituacaoCliente[0].checked" placeholder="Isento">
                    <label class="form-check-label" for="SituacaoCliente">
                        Bloqueado
                    </label>
                </div>
            </div>
        </div>
    </div>
    </div>
</form>


<script>
    aparecer();
    function aparecer() {
        // Função para mostrar ou ocultar a seção com base no valor selecionado
        function toggleSectionVisibility() {
            var tipoPessoa = document.getElementById("tipoPessoaDropdown").value;
            if (tipoPessoa === "F") {
                document.getElementById("aparecer").style.display = "flex";
            } else {
                document.getElementById("aparecer").style.display = "none";
            }
        }

        // Vincular a função ao evento onchange do dropdown
        document.getElementById("tipoPessoaDropdown").addEventListener("change", function () {
            toggleSectionVisibility();
        });

        // Chamar a função inicialmente para garantir que a seção seja exibida/ocultada corretamente ao carregar a página
        toggleSectionVisibility();
    };
</script>
<script>



    function atualizarLengthHelp(value, id) {
        document.getElementById(id).innerText = value.length + "/150"
    }

    function atualizarLengthHelpTelefone(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var telefoneMascarado = "";
        if (soma > 0) {
            telefoneMascarado = '(' + valor.substring(0, valor.length < 2 ? valor.length : 2);
        }
        if (soma > 2) {
            telefoneMascarado += ") " + valor.substring(2, soma < 6 ? valor.length : 7);
        }
        if (soma > 7) {
            telefoneMascarado += "-" + valor.substring(7, valor.length < 12 ? valor.length : 12);
        }
        telefoneMascarado = telefoneMascarado.substring(0, telefoneMascarado.length < 15 ? telefoneMascarado.length : 15);
        document.getElementById(id).innerText = telefoneMascarado.replace(/\D/g, '').length + "/11"
        return telefoneMascarado;
    }

    function atualizarLengthHelpInscricaoEstadual(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var InscricaoEstadual = "";
        if (soma > 0) {
            InscricaoEstadual = valor.substring(0, valor.length < 3 ? valor.length : 3);
        }
        if (soma > 3) {
            InscricaoEstadual += "." + valor.substring(3, soma < 6 ? valor.length : 6);
        }
        if (soma > 6) {
            InscricaoEstadual += "." + valor.substring(6, valor.length < 9 ? valor.length : 9);
        }
        if (soma > 9) {
            InscricaoEstadual += "-" + valor.substring(9, valor.length < 12 ? valor.length : 12);
        }
        InscricaoEstadual = InscricaoEstadual.substring(0, InscricaoEstadual.length < 15 ? InscricaoEstadual.length : 15);
        document.getElementById(id).innerText = InscricaoEstadual.replace(/\D/g, '').length + "/12"
        return InscricaoEstadual;
    }

    function atualizarLengthHelpCpfCnpj(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var CpfCnpj = "";
        console.log(valor)
        if (value.length <= 14) {
            if (soma > 0) {
                CpfCnpj += valor.substring(0, valor.length >= 3 ? 3 : valor.length)
            }
            if (soma > 3) {
                CpfCnpj += "." + valor.substring(3, soma < 5 ? valor.length : 6);
            }
            if (soma > 6) {
                CpfCnpj += "." + valor.substring(6, valor.length < 9 ? valor.length : 9);
            }
            if (soma > 9) {
                CpfCnpj += "-" + valor.substring(9, valor.length < 11 ? valor.length : 11);
            }
        } else {
            if (soma > 0) {
                console.log(soma)
                CpfCnpj += valor.substring(0, valor.length >= 2 ? 2 : valor.length)
            }
            if (soma > 2) {
                CpfCnpj += "." + valor.substring(2, soma < 4 ? valor.length : 5);
            }
            if (soma > 5) {
                CpfCnpj += "." + valor.substring(5, valor.length < 8 ? valor.length : 8);
            }
            if (soma > 8) {
                CpfCnpj += "/" + valor.substring(8, valor.length < 12 ? valor.length : 12);
            }
            if (soma > 12) {
                CpfCnpj += "-" + valor.substring(12, valor.length < 14 ? valor.length : 14);
            }
        }

        document.getElementById(id).innerText = soma + (soma <= 11 ? "/11" : "/14");
        return CpfCnpj.substring(0, valor.length < 18 ? CpfCnpj.length : 18);
    }

    function limparInscricaoEstadual(value) {
        if (value) {
            document.getElementById("InscricaoEstadualId").setAttribute("disabled", value);
        } else {
            document.getElementById("InscricaoEstadualId").removeAttribute("disabled", value);
        }
        return "";
    }

    function validation() {
        var forms = document.querySelectorAll('.validar')

        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            });
    }
</script>

<style>
    .areaPrincipal {
        display: flex;
        flex-direction: row;
        gap: 30px
    }

    .divInput {
        width: 100%
    }

    .formStyle {
        box-shadow: 2px 3px 10px;
        padding: 6px;
        border-radius: 10px;
    }

    select{
        height: 4vh;
        border: 1px solid #ced4da;
        border-radius: 5px;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }
</style>