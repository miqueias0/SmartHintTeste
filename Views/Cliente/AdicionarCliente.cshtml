@model ClienteModel

@{
    ViewData["Title"] = "Cadastro de Clientes";
}

<div class="text-center">
    <h6 class="display-6" style="font-size: 1.6rem !important;">
        Cadastrar Cliente
    </h6>
</div>
<br />
<form asp-controller="Cliente" asp-action="AdicionarCliente" method="post" class="validar">
    <div style="display: flex; flex-direction: column; gap:30px;">
        <div id="toast" class="hidden">
            <div id="toast-body"></div>
        </div>
        <div class="formStyle">
            <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
                Área Principal
            </h6>
            <br />
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="nomeCliente">Nome do Cliente/Razão Social</label>
                    <input type="text" asp-for="NomeCliente" oninput="atualizarLengthHelp(NomeCliente.value, 'nomeClienteHelp')" class="form-control " maxlength="150" placeholder="Nome completo ou Razão Social do Cliente" autocomplete="off" formnovalidate required>
                    <small id="nomeClienteHelp" class=" form-text text-muted" style="display: flex; justify-content: end;">@Html.ValueFor(model => model.NomeCliente).Length/150</small>
                </div>
                <div class="divInput">
                    <label for="Email">E-Mail</label>
                    <input type="email" asp-for="Email" oninput="atualizarLengthHelp(Email.value, 'emailHelp')" class="form-control  " maxlength="150" placeholder="E-mail do Cliente" autocomplete="off" formnovalidate required>
                    <small id="emailHelp" class="form-text text-muted" style="display: flex; justify-content: end;">@Html.ValueFor(model => model.Email).Length/150</small>
                </div>
            </div>
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="telefone">Telefone</label>
                    <input type="text" asp-for="Telefone" oninput="Telefone.value = atualizarLengthHelpTelefone(Telefone.value, 'telefoneClienteHelp')" class="form-control " placeholder="Telefone do Cliente" autocomplete="off" formnovalidate required>
                    <small id="telefoneClienteHelp" class="form-text text-muted" style="display: flex; justify-content: end;">@Html.ValueFor(model => model.Telefone).Length/11</small>
                </div>
                <div class="divInput">
                    <label for="DataCadastro">Data de Cadastro</label>
                    <input type="date" asp-for="DataCadastro" class="form-control" readonly placeholder="Data de Cadastro" autocomplete="off">
                </div>
            </div>
        </div>
        <div class="formStyle">
            <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
                Informações Pessoais
            </h6>
            <br />
            <div class="areaPrincipal">
                <div class="divInput form-group" style="display: flex; flex-direction: column !important;">
                    <label for="tipoPessoaDropdown">Tipo de Pessoa</label>
                    <select class="form-select custom-select" aria-label="Tipo de Pessoa" id="tipoPessoaDropdown" asp-for="TipoPessoa" formnovalidate required>
                        <option value="">Selecione o tipo de Pessoa</option>
                        <option value="F">Física</option>
                        <option value="J">Jurídica</option>
                    </select>
                    <div class="invalid-feedback">Selecione o tipo de Pessoa</div>
                </div>
                <div class="divInput">
                    <label for="CpfCnpj">CPF/CNPJ</label>
                    <input type="text" formnovalidate asp-for="CpfCnpj" oninput="CpfCnpj.value = atualizarLengthHelpCpfCnpj(CpfCnpj.value, 'CpfCnpjHelp')" class="form-control " maxlength="18" placeholder="Insira o CPF ou o CNPJ do Cliente" autocomplete="off" required>
                    <small id="CpfCnpjHelp" class="form-text text-muted" style="display: flex; justify-content: end;">@Html.ValueFor(model => model.CpfCnpj).Length/11</small>
                </div>
            </div>
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="InscricaoEstadual">Inscrição Estadual</label>
                    <input type="text" asp-for="InscricaoEstadual" id="InscricaoEstadualId" oninput="InscricaoEstadual.value = atualizarLengthHelpInscricaoEstadual(InscricaoEstadual.value, 'InscricaoEstadualHelp')" class="form-control " [required]="tipoPessoaDropdown.value === 'J'" placeholder="Inscrição Estadual do Cliente, selecionar Isento caso assim for" autocomplete="off">
                    <small id="InscricaoEstadualHelp" class="form-text text-muted" style="display: flex; justify-content: end;">@Html.ValueFor(model => model.InscricaoEstadual).Length/12</small>
                </div>
                <div class="divInput" style="display: flex; align-items: center;">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="Isento" onchange="InscricaoEstadual.value = limparInscricaoEstadual(Isento[0] ? Isento[0].checked: Isento.checked)" class="form-control" placeholder="Isento">
                        <label class="form-check-label" for="Isento">
                            Isento
                        </label>
                    </div>
                </div>
            </div>
            <div class="areaPrincipal" id="aparecer" style="display: none;">
                <div class="divInput form-group">
                    <label for="Genero">Gênero</label>
                    <select class="form-select custom-select" aria-label="Gênero" asp-for="Genero" id="Genero">
                        <option selected>Selecione o gênero do Cliente</option>
                        <option value="Feminino">Feminino</option>
                        <option value="Masculino">Masculino</option>
                        <option value="Outro">Outro</option>
                    </select>
                    <div class="invalid-feedback">Selecione o tipo de Pessoa</div>
                </div>
                <div class="divInput">
                    <label for="DataNascimento">Data de Nascimento</label>
                    <input type="date" asp-for="DataNascimento" class="form-control " placeholder="Data de nascimento do Cliente" autocomplete="off">
                </div>
            </div>
        </div>
        <div class="formStyle">
            <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
                Situação do Cliente
            </h6>
            <br />
            <div class="areaPrincipal">
                <div class="divInput" style="display: flex; align-items: center;">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="ClienteBloqueado" class="form-control" placeholder="Bloqueio o acesso do Cliente na sua Loja">
                        <label class="form-check-label" for="ClienteBloqueado">
                            Bloqueio o acesso do Cliente na sua Loja
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="formStyle">
            <h6 class="text-center display-6" style="font-size: 1.6rem !important;">
                Senha de Acesso
            </h6>
            <br />
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="Senha">Senha de Acesso</label>
                    <input type="password" maxlength="15" asp-for="Senha" id="SenhaId" oninput="Senha.value = atualizarLengthHelpCadastrarSenha(Senha.value, 'SenhaHelp')" class="form-control " placeholder="Cadastre a senha de acesso do seu Cliente" autocomplete="off" required>
                    <small id="SenhaHelp" style="display: flex; justify-content: end; color: #6c757d;">@Html.ValueFor(model => model.Senha).Length/15</small>
                </div>
            </div>
            <div class="areaPrincipal">
                <div class="divInput">
                    <label for="Senha">Confirmar Senha de Acesso</label>
                    <input type="password" maxlength="15" id="SenhaConfirmarId" oninput="SenhaConfirmarId.value = atualizarLengthHelpSenhaConfirmar(SenhaConfirmarId.value, 'SenhaConfirmarHelp')" class="form-control " placeholder="Confirme a senha de acesso do seu Cliente" autocomplete="off" required>
                    <small id="SenhaConfirmarHelp" style="display: flex; justify-content: end; color: #6c757d;">0/15</small>
                </div>
            </div>
        </div>
        <div style="display: flex; flex-direction: column; gap: 10px;">
            <div class="divInput" style="display: flex; flex-direction: column;">
                <button type="submit" onclick="verificar(event)" class="btn btn-primary">Adicionar Cliente</button>
            </div>
            <div class="divInput" style="display: flex; flex-direction: column;">
                <a class="btn btn-danger" asp-controller="Cliente" asp-action="Index">Voltar</a>
            </div>
        </div>
    </div>
</form>


<script>

    function verificar(event) {
        document.getElementsByClassName('validar')[0].classList.add('was-validated');
    }

    aparecer();
    function aparecer() {
        // Função para mostrar ou ocultar a seção com base no valor selecionado
        function toggleSectionVisibility() {
            var tipoPessoa = document.getElementById("tipoPessoaDropdown").value;
            if (tipoPessoa === "F") {
                document.getElementById("aparecer").style.display = "flex";
                document.getElementById("Genero").setAttribute("required", true);
                document.getElementById("DataNascimento").setAttribute("required", true);
            } else {
                document.getElementById("aparecer").style.display = "none";
                document.getElementById("Genero").setAttribute("required", false);
                document.getElementById("DataNascimento").setAttribute("required", false);
            }
        }

        // Vincular a função ao evento onchange do dropdown
        document.getElementById("tipoPessoaDropdown").addEventListener("change", function () {
            toggleSectionVisibility();
            document.getElementById("InscricaoEstadualId").setAttribute("required", !document.getElementById("Isento").value);
        });

        // Chamar a função inicialmente para garantir que a seção seja exibida/ocultada corretamente ao carregar a página
        toggleSectionVisibility();
    };



    document.getElementById("Isento").addEventListener("change", function () {
        document.getElementById("InscricaoEstadualId").setAttribute("required", !document.getElementById("Isento").value);
    });

</script>
<script>



    function atualizarLengthHelp(value, id) {
        document.getElementById(id).innerText = value.length + "/150"
    }

    function atualizarLengthHelpTelefone(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var telefoneMascarado = "";
        if (soma > 0) {
            telefoneMascarado = '(' + valor.substring(0, valor.length < 2 ? valor.length : 2);
        }
        if (soma > 2) {
            telefoneMascarado += ") " + valor.substring(2, soma < 6 ? valor.length : 7);
        }
        if (soma > 7) {
            telefoneMascarado += "-" + valor.substring(7, valor.length < 12 ? valor.length : 12);
        }
        telefoneMascarado = telefoneMascarado.substring(0, telefoneMascarado.length < 15 ? telefoneMascarado.length : 15);
        document.getElementById(id).innerText = telefoneMascarado.replace(/\D/g, '').length + "/11"
        return telefoneMascarado;
    }

    function atualizarLengthHelpInscricaoEstadual(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var InscricaoEstadual = "";
        if (soma > 0) {
            InscricaoEstadual = valor.substring(0, valor.length < 3 ? valor.length : 3);
        }
        if (soma > 3) {
            InscricaoEstadual += "." + valor.substring(3, soma < 6 ? valor.length : 6);
        }
        if (soma > 6) {
            InscricaoEstadual += "." + valor.substring(6, valor.length < 9 ? valor.length : 9);
        }
        if (soma > 9) {
            InscricaoEstadual += "-" + valor.substring(9, valor.length < 12 ? valor.length : 12);
        }
        InscricaoEstadual = InscricaoEstadual.substring(0, InscricaoEstadual.length < 15 ? InscricaoEstadual.length : 15);
        document.getElementById(id).innerText = InscricaoEstadual.replace(/\D/g, '').length + "/12"
        return InscricaoEstadual;
    }

    function atualizarLengthHelpCpfCnpj(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        var CpfCnpj = "";
        if (value.length <= 14) {
            if (soma > 0) {
                CpfCnpj += valor.substring(0, valor.length >= 3 ? 3 : valor.length)
            }
            if (soma > 3) {
                CpfCnpj += "." + valor.substring(3, soma < 5 ? valor.length : 6);
            }
            if (soma > 6) {
                CpfCnpj += "." + valor.substring(6, valor.length < 9 ? valor.length : 9);
            }
            if (soma > 9) {
                CpfCnpj += "-" + valor.substring(9, valor.length < 11 ? valor.length : 11);
            }
        } else {
            if (soma > 0) {
                console.log(soma)
                CpfCnpj += valor.substring(0, valor.length >= 2 ? 2 : valor.length)
            }
            if (soma > 2) {
                CpfCnpj += "." + valor.substring(2, soma < 4 ? valor.length : 5);
            }
            if (soma > 5) {
                CpfCnpj += "." + valor.substring(5, valor.length < 8 ? valor.length : 8);
            }
            if (soma > 8) {
                CpfCnpj += "/" + valor.substring(8, valor.length < 12 ? valor.length : 12);
            }
            if (soma > 12) {
                CpfCnpj += "-" + valor.substring(12, valor.length < 14 ? valor.length : 14);
            }
        }

        document.getElementById(id).innerText = soma + (soma <= 11 ? "/11" : "/14");
        return CpfCnpj.substring(0, valor.length < 18 ? CpfCnpj.length : 18);
    }

    function atualizarLengthHelpCadastrarSenha(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        if (soma < 8) {
            document.getElementById(id).innerText = "Mínimo oito caracteres";
            document.getElementById(id).style.color = 'red';
        } else {
            document.getElementById(id).innerText = soma + "/15";
            document.getElementById(id).style.color = "#6c757d";
        }
        if (document.getElementById("SenhaConfirmarId").value) {
            atualizarLengthHelpSenhaConfirmar(document.getElementById("SenhaConfirmarId").value, "SenhaConfirmarHelp");
        }

        return valor;
    }

    function limparInscricaoEstadual(value) {
        if (value) {
            document.getElementById("InscricaoEstadualId").setAttribute("disabled", value);
        } else {
            document.getElementById("InscricaoEstadualId").removeAttribute("disabled", value);
        }
        return "";
    }

    function atualizarLengthHelpSenhaConfirmar(value, id) {
        let soma = value.replace(/\D/g, '').length;
        var valor = value.replace(/\D/g, '');
        if (valor !== document.getElementById("SenhaId").value) {
            document.getElementById(id).innerText = "As senhas não conferem";
            document.getElementById(id).style.color = 'red';
        } else {
            if (soma < 8) {
                document.getElementById(id).innerText = "Mínimo oito caracteres";
                document.getElementById(id).style.color = 'red';
            } else {
                document.getElementById(id).innerText = soma + "/15";
                document.getElementById(id).style.color = "#6c757d";
            }
        }
        return valor;
    }

    function limparInscricaoEstadual(value) {
        if (value) {
            document.getElementById("InscricaoEstadualId").setAttribute("disabled", value);
        } else {
            document.getElementById("InscricaoEstadualId").removeAttribute("disabled", value);
        }
        return "";
    }

    function showToast(message, duration = 3000) {
        const toast = document.getElementById('toast');
        const toastBody = document.getElementById('toast-body');

        toastBody.innerHTML = message;

        toast.classList.add('show');
        toast.classList.remove('hidden');

        setTimeout(() => {
            toast.classList.remove('show');
            toast.classList.add('hidden');
        }, duration);
    }

</script>

<style>

    #toast {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #333;
        color: #fff;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        z-index: 999;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

        #toast.show {
            opacity: 1;
        }

    .hidden {
        display: none;
    }

    .areaPrincipal {
        display: flex;
        flex-direction: row;
        gap: 30px
    }

    .divInput {
        width: 100%
    }

    .formStyle {
        box-shadow: 2px 3px 10px;
        padding: 6px;
        border-radius: 10px;
    }



    select {
        border: 1px solid #ced4da;
        border-radius: 5px;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }
</style>

@section scripts {
    <script>
        validation();
        function validation() {
            $('.validar').on('submit', function (event) {
                event.preventDefault();
                event.stopPropagation();

                var form = $(this);

                var clienteData = {
                    Email: form.find('[name="Email"]').val(),
                    CpfCnpj: form.find('[name="CpfCnpj"]').val(),
                    InscricaoEstadual: form.find('[name="InscricaoEstadual"]').val(),
                    Isento: form.find('[name="Isento"]').val()
                };

                $.ajax({
                    url: '@Url.Action("VerificarExistenciaDeCadastro", "Cliente")',
                    type: 'POST',
                    data: { cliente: clienteData },
                    success: function (result) {
                        if (!result.sucesso) {
                            showToast(result.mensagem, 3000);
                        } else if (form[0].checkValidity() || $('#SenhaConfirmarId').val() === $('#Senha').val()) {
                            form.addClass('was-validated');
                            form.submit();
                        }
                    },
                    error: function () {
                        toastr.error('Erro ao realizar a requisição', 'Erro');
                    }
                });
            });
        }
        $(document).ready(function () {
            try {
                $('#Telefone').val(atualizarLengthHelpTelefone($('#Telefone').val(), 'telefoneClienteHelp'));
            } catch { }
            try {
                $('#CpfCnpj').val(atualizarLengthHelpCpfCnpj($('#CpfCnpj').val(), 'CpfCnpjHelp'));
            } catch { }
            try {
                $('#InscricaoEstadual').val(atualizarLengthHelpInscricaoEstadual($('#InscricaoEstadual').val(), 'InscricaoEstadualHelp'));
            } catch { }
            try {
                $('#InscricaoEstadual').val(limparInscricaoEstadual($('#Isento').val()));
            } catch { }
            try {
                $('#Senha').val(limparInscricaoEstadual($('#Senha').val()));
            } catch { }
        });
    </script>
}